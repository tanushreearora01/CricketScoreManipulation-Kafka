services:
  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092,PLAINTEXT_DOCKER://0.0.0.0:9093
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092,PLAINTEXT_DOCKER://kafka:9093
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_DOCKER:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
    ports:
      - "9092:9092"
      - "9093:9093"

  mysql:
    image: mysql:latest
    container_name: mysql-db
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=cricket_db
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql  #  Persistent MySQL data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql  #  Mount `init.sql` for automatic execution
  producer:
    build:
      context: ./producer
      dockerfile: Dockerfile
    container_name: cricket-producer
    depends_on:
      - kafka
    environment:
      - KAFKA_BROKER=kafka:9093
      - RUNNING_IN_DOCKER=true
    restart: on-failure

  consumer:
    build:
      context: ./consumer
      dockerfile: Dockerfile
    container_name: cricket-consumer
    depends_on:
       - kafka
       - mysql
    environment:
      - KAFKA_BROKER=kafka:9093
      - MYSQL_HOST=mysql-db
    restart: on-failure

volumes:
  mysql_data:
